-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity region_before_dataflow_in_loop_VITIS_LOOP_65_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    A : IN STD_LOGIC_VECTOR (31 downto 0);
    tilenuma : IN STD_LOGIC_VECTOR (31 downto 0);
    tilen : IN STD_LOGIC_VECTOR (31 downto 0);
    B : IN STD_LOGIC_VECTOR (31 downto 0);
    tilenumc : IN STD_LOGIC_VECTOR (31 downto 0);
    C_i : IN STD_LOGIC_VECTOR (31 downto 0);
    C_o : OUT STD_LOGIC_VECTOR (31 downto 0);
    tilenuma_ap_vld : IN STD_LOGIC;
    tilen_ap_vld : IN STD_LOGIC;
    tilenumc_ap_vld : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    A_ap_vld : IN STD_LOGIC;
    B_ap_vld : IN STD_LOGIC;
    C_i_ap_vld : IN STD_LOGIC;
    C_o_ap_vld : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of region_before_dataflow_in_loop_VITIS_LOOP_65_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

attribute shreg_extract : string;
    signal a_buf_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal a_buf_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_buf_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_buf_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_buf_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_buf_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_full_n : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_continue : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_out : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out1_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out1_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilen_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilen_out_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out_write : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out2_din : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out2_write : STD_LOGIC;
    signal load_a_U0_ap_start : STD_LOGIC;
    signal load_a_U0_ap_done : STD_LOGIC;
    signal load_a_U0_ap_continue : STD_LOGIC;
    signal load_a_U0_ap_idle : STD_LOGIC;
    signal load_a_U0_ap_ready : STD_LOGIC;
    signal load_a_U0_a_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal load_a_U0_a_buf_ce0 : STD_LOGIC;
    signal load_a_U0_a_buf_we0 : STD_LOGIC;
    signal load_a_U0_a_buf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal load_a_U0_tilenuma_read : STD_LOGIC;
    signal load_a_U0_tilen_read : STD_LOGIC;
    signal load_a_U0_tilenuma_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal load_a_U0_tilenuma_out_write : STD_LOGIC;
    signal load_a_U0_tilen_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal load_a_U0_tilen_out_write : STD_LOGIC;
    signal ap_channel_done_a_buf : STD_LOGIC;
    signal load_a_U0_a_buf_full_n : STD_LOGIC;
    signal load_b_U0_ap_start : STD_LOGIC;
    signal load_b_U0_ap_done : STD_LOGIC;
    signal load_b_U0_ap_continue : STD_LOGIC;
    signal load_b_U0_ap_idle : STD_LOGIC;
    signal load_b_U0_ap_ready : STD_LOGIC;
    signal load_b_U0_b_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal load_b_U0_b_buf_ce0 : STD_LOGIC;
    signal load_b_U0_b_buf_we0 : STD_LOGIC;
    signal load_b_U0_b_buf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal load_b_U0_tilenuma_read : STD_LOGIC;
    signal load_b_U0_tilenumc_read : STD_LOGIC;
    signal ap_channel_done_b_buf : STD_LOGIC;
    signal load_b_U0_b_buf_full_n : STD_LOGIC;
    signal conv_U0_ap_start : STD_LOGIC;
    signal conv_U0_ap_done : STD_LOGIC;
    signal conv_U0_ap_continue : STD_LOGIC;
    signal conv_U0_ap_idle : STD_LOGIC;
    signal conv_U0_ap_ready : STD_LOGIC;
    signal conv_U0_a_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_U0_a_buf_ce0 : STD_LOGIC;
    signal conv_U0_b_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_U0_b_buf_ce0 : STD_LOGIC;
    signal conv_U0_c_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv_U0_c_buf_ce0 : STD_LOGIC;
    signal conv_U0_c_buf_we0 : STD_LOGIC;
    signal conv_U0_c_buf_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_U0_tilen_read : STD_LOGIC;
    signal conv_U0_tilenuma_read : STD_LOGIC;
    signal conv_U0_tilenumc_read : STD_LOGIC;
    signal conv_U0_tilen_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_U0_tilen_out_write : STD_LOGIC;
    signal conv_U0_tilenumc_out_din : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_U0_tilenumc_out_write : STD_LOGIC;
    signal ap_channel_done_c_buf : STD_LOGIC;
    signal conv_U0_c_buf_full_n : STD_LOGIC;
    signal store_c_U0_ap_start : STD_LOGIC;
    signal store_c_U0_ap_done : STD_LOGIC;
    signal store_c_U0_ap_continue : STD_LOGIC;
    signal store_c_U0_ap_idle : STD_LOGIC;
    signal store_c_U0_ap_ready : STD_LOGIC;
    signal store_c_U0_C_o : STD_LOGIC_VECTOR (31 downto 0);
    signal store_c_U0_C_o_ap_vld : STD_LOGIC;
    signal store_c_U0_c_buf_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal store_c_U0_c_buf_ce0 : STD_LOGIC;
    signal store_c_U0_tilenumc_read : STD_LOGIC;
    signal store_c_U0_tilen_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal a_buf_i_full_n : STD_LOGIC;
    signal a_buf_t_empty_n : STD_LOGIC;
    signal b_buf_i_full_n : STD_LOGIC;
    signal b_buf_t_empty_n : STD_LOGIC;
    signal c_buf_i_full_n : STD_LOGIC;
    signal c_buf_t_empty_n : STD_LOGIC;
    signal tilenuma_c_full_n : STD_LOGIC;
    signal tilenuma_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilenuma_c_empty_n : STD_LOGIC;
    signal tilenuma_c1_full_n : STD_LOGIC;
    signal tilenuma_c1_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilenuma_c1_empty_n : STD_LOGIC;
    signal tilen_c_full_n : STD_LOGIC;
    signal tilen_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilen_c_empty_n : STD_LOGIC;
    signal tilenumc_c_full_n : STD_LOGIC;
    signal tilenumc_c_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilenumc_c_empty_n : STD_LOGIC;
    signal tilenumc_c2_full_n : STD_LOGIC;
    signal tilenumc_c2_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilenumc_c2_empty_n : STD_LOGIC;
    signal tilenuma_c3_full_n : STD_LOGIC;
    signal tilenuma_c3_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilenuma_c3_empty_n : STD_LOGIC;
    signal tilen_c4_full_n : STD_LOGIC;
    signal tilen_c4_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilen_c4_empty_n : STD_LOGIC;
    signal tilen_c5_full_n : STD_LOGIC;
    signal tilen_c5_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilen_c5_empty_n : STD_LOGIC;
    signal tilenumc_c6_full_n : STD_LOGIC;
    signal tilenumc_c6_dout : STD_LOGIC_VECTOR (31 downto 0);
    signal tilenumc_c6_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_load_a_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_load_a_U0_full_n : STD_LOGIC;
    signal start_for_load_a_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_load_a_U0_empty_n : STD_LOGIC;
    signal start_for_load_b_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_load_b_U0_full_n : STD_LOGIC;
    signal start_for_load_b_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_load_b_U0_empty_n : STD_LOGIC;
    signal load_a_U0_start_full_n : STD_LOGIC;
    signal load_a_U0_start_write : STD_LOGIC;
    signal load_b_U0_start_full_n : STD_LOGIC;
    signal load_b_U0_start_write : STD_LOGIC;
    signal conv_U0_start_full_n : STD_LOGIC;
    signal conv_U0_start_write : STD_LOGIC;
    signal store_c_U0_start_full_n : STD_LOGIC;
    signal store_c_U0_start_write : STD_LOGIC;

    component region_before_dataflow_in_loop_VITIS_LOOP_65_3_entry83 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        tilenuma : IN STD_LOGIC_VECTOR (31 downto 0);
        tilen : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenumc : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_out_full_n : IN STD_LOGIC;
        tilenuma_out_write : OUT STD_LOGIC;
        tilenuma_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_out1_full_n : IN STD_LOGIC;
        tilenuma_out1_write : OUT STD_LOGIC;
        tilen_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilen_out_full_n : IN STD_LOGIC;
        tilen_out_write : OUT STD_LOGIC;
        tilenumc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenumc_out_full_n : IN STD_LOGIC;
        tilenumc_out_write : OUT STD_LOGIC;
        tilenumc_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenumc_out2_full_n : IN STD_LOGIC;
        tilenumc_out2_write : OUT STD_LOGIC );
    end component;


    component region_before_load_a IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A : IN STD_LOGIC_VECTOR (31 downto 0);
        a_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        a_buf_ce0 : OUT STD_LOGIC;
        a_buf_we0 : OUT STD_LOGIC;
        a_buf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_empty_n : IN STD_LOGIC;
        tilenuma_read : OUT STD_LOGIC;
        tilen_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilen_empty_n : IN STD_LOGIC;
        tilen_read : OUT STD_LOGIC;
        tilenuma_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_out_full_n : IN STD_LOGIC;
        tilenuma_out_write : OUT STD_LOGIC;
        tilen_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilen_out_full_n : IN STD_LOGIC;
        tilen_out_write : OUT STD_LOGIC );
    end component;


    component region_before_load_b IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        B : IN STD_LOGIC_VECTOR (31 downto 0);
        b_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        b_buf_ce0 : OUT STD_LOGIC;
        b_buf_we0 : OUT STD_LOGIC;
        b_buf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_empty_n : IN STD_LOGIC;
        tilenuma_read : OUT STD_LOGIC;
        tilenumc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenumc_empty_n : IN STD_LOGIC;
        tilenumc_read : OUT STD_LOGIC );
    end component;


    component region_before_conv IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        a_buf_ce0 : OUT STD_LOGIC;
        a_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        b_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        b_buf_ce0 : OUT STD_LOGIC;
        b_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        c_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_buf_ce0 : OUT STD_LOGIC;
        c_buf_we0 : OUT STD_LOGIC;
        c_buf_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilen_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilen_empty_n : IN STD_LOGIC;
        tilen_read : OUT STD_LOGIC;
        tilenuma_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenuma_empty_n : IN STD_LOGIC;
        tilenuma_read : OUT STD_LOGIC;
        tilenumc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenumc_empty_n : IN STD_LOGIC;
        tilenumc_read : OUT STD_LOGIC;
        tilen_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilen_out_full_n : IN STD_LOGIC;
        tilen_out_write : OUT STD_LOGIC;
        tilenumc_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        tilenumc_out_full_n : IN STD_LOGIC;
        tilenumc_out_write : OUT STD_LOGIC );
    end component;


    component region_before_store_c IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_i : IN STD_LOGIC_VECTOR (31 downto 0);
        C_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_o_ap_vld : OUT STD_LOGIC;
        c_buf_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_buf_ce0 : OUT STD_LOGIC;
        c_buf_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenumc_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilenumc_empty_n : IN STD_LOGIC;
        tilenumc_read : OUT STD_LOGIC;
        tilen_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        tilen_empty_n : IN STD_LOGIC;
        tilen_read : OUT STD_LOGIC );
    end component;


    component region_before_dataflow_in_loop_VITIS_LOOP_65_3_a_buf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;


    component region_before_fifo_w32_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component region_before_fifo_w32_d3_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (31 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (31 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component region_before_start_for_load_a_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component region_before_start_for_load_b_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    a_buf_U : component region_before_dataflow_in_loop_VITIS_LOOP_65_3_a_buf
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => load_a_U0_a_buf_address0,
        i_ce0 => load_a_U0_a_buf_ce0,
        i_we0 => load_a_U0_a_buf_we0,
        i_d0 => load_a_U0_a_buf_d0,
        i_q0 => a_buf_i_q0,
        t_address0 => conv_U0_a_buf_address0,
        t_ce0 => conv_U0_a_buf_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => a_buf_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => a_buf_i_full_n,
        i_write => load_a_U0_ap_done,
        t_empty_n => a_buf_t_empty_n,
        t_read => conv_U0_ap_ready);

    b_buf_U : component region_before_dataflow_in_loop_VITIS_LOOP_65_3_a_buf
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => load_b_U0_b_buf_address0,
        i_ce0 => load_b_U0_b_buf_ce0,
        i_we0 => load_b_U0_b_buf_we0,
        i_d0 => load_b_U0_b_buf_d0,
        i_q0 => b_buf_i_q0,
        t_address0 => conv_U0_b_buf_address0,
        t_ce0 => conv_U0_b_buf_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => b_buf_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => b_buf_i_full_n,
        i_write => load_b_U0_ap_done,
        t_empty_n => b_buf_t_empty_n,
        t_read => conv_U0_ap_ready);

    c_buf_U : component region_before_dataflow_in_loop_VITIS_LOOP_65_3_a_buf
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => conv_U0_c_buf_address0,
        i_ce0 => conv_U0_c_buf_ce0,
        i_we0 => conv_U0_c_buf_we0,
        i_d0 => conv_U0_c_buf_d0,
        i_q0 => c_buf_i_q0,
        t_address0 => store_c_U0_c_buf_address0,
        t_ce0 => store_c_U0_c_buf_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => c_buf_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => c_buf_i_full_n,
        i_write => conv_U0_ap_done,
        t_empty_n => c_buf_t_empty_n,
        t_read => store_c_U0_ap_ready);

    dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0 : component region_before_dataflow_in_loop_VITIS_LOOP_65_3_entry83
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_start,
        start_full_n => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_full_n,
        ap_done => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_done,
        ap_continue => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_continue,
        ap_idle => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_idle,
        ap_ready => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_ready,
        start_out => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_out,
        start_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_write,
        tilenuma => tilenuma,
        tilen => tilen,
        tilenumc => tilenumc,
        tilenuma_out_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out_din,
        tilenuma_out_full_n => tilenuma_c_full_n,
        tilenuma_out_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out_write,
        tilenuma_out1_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out1_din,
        tilenuma_out1_full_n => tilenuma_c1_full_n,
        tilenuma_out1_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out1_write,
        tilen_out_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilen_out_din,
        tilen_out_full_n => tilen_c_full_n,
        tilen_out_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilen_out_write,
        tilenumc_out_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out_din,
        tilenumc_out_full_n => tilenumc_c_full_n,
        tilenumc_out_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out_write,
        tilenumc_out2_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out2_din,
        tilenumc_out2_full_n => tilenumc_c2_full_n,
        tilenumc_out2_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out2_write);

    load_a_U0 : component region_before_load_a
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => load_a_U0_ap_start,
        ap_done => load_a_U0_ap_done,
        ap_continue => load_a_U0_ap_continue,
        ap_idle => load_a_U0_ap_idle,
        ap_ready => load_a_U0_ap_ready,
        A => A,
        a_buf_address0 => load_a_U0_a_buf_address0,
        a_buf_ce0 => load_a_U0_a_buf_ce0,
        a_buf_we0 => load_a_U0_a_buf_we0,
        a_buf_d0 => load_a_U0_a_buf_d0,
        tilenuma_dout => tilenuma_c_dout,
        tilenuma_empty_n => tilenuma_c_empty_n,
        tilenuma_read => load_a_U0_tilenuma_read,
        tilen_dout => tilen_c_dout,
        tilen_empty_n => tilen_c_empty_n,
        tilen_read => load_a_U0_tilen_read,
        tilenuma_out_din => load_a_U0_tilenuma_out_din,
        tilenuma_out_full_n => tilenuma_c3_full_n,
        tilenuma_out_write => load_a_U0_tilenuma_out_write,
        tilen_out_din => load_a_U0_tilen_out_din,
        tilen_out_full_n => tilen_c4_full_n,
        tilen_out_write => load_a_U0_tilen_out_write);

    load_b_U0 : component region_before_load_b
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => load_b_U0_ap_start,
        ap_done => load_b_U0_ap_done,
        ap_continue => load_b_U0_ap_continue,
        ap_idle => load_b_U0_ap_idle,
        ap_ready => load_b_U0_ap_ready,
        B => B,
        b_buf_address0 => load_b_U0_b_buf_address0,
        b_buf_ce0 => load_b_U0_b_buf_ce0,
        b_buf_we0 => load_b_U0_b_buf_we0,
        b_buf_d0 => load_b_U0_b_buf_d0,
        tilenuma_dout => tilenuma_c1_dout,
        tilenuma_empty_n => tilenuma_c1_empty_n,
        tilenuma_read => load_b_U0_tilenuma_read,
        tilenumc_dout => tilenumc_c_dout,
        tilenumc_empty_n => tilenumc_c_empty_n,
        tilenumc_read => load_b_U0_tilenumc_read);

    conv_U0 : component region_before_conv
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => conv_U0_ap_start,
        ap_done => conv_U0_ap_done,
        ap_continue => conv_U0_ap_continue,
        ap_idle => conv_U0_ap_idle,
        ap_ready => conv_U0_ap_ready,
        a_buf_address0 => conv_U0_a_buf_address0,
        a_buf_ce0 => conv_U0_a_buf_ce0,
        a_buf_q0 => a_buf_t_q0,
        b_buf_address0 => conv_U0_b_buf_address0,
        b_buf_ce0 => conv_U0_b_buf_ce0,
        b_buf_q0 => b_buf_t_q0,
        c_buf_address0 => conv_U0_c_buf_address0,
        c_buf_ce0 => conv_U0_c_buf_ce0,
        c_buf_we0 => conv_U0_c_buf_we0,
        c_buf_d0 => conv_U0_c_buf_d0,
        tilen_dout => tilen_c4_dout,
        tilen_empty_n => tilen_c4_empty_n,
        tilen_read => conv_U0_tilen_read,
        tilenuma_dout => tilenuma_c3_dout,
        tilenuma_empty_n => tilenuma_c3_empty_n,
        tilenuma_read => conv_U0_tilenuma_read,
        tilenumc_dout => tilenumc_c2_dout,
        tilenumc_empty_n => tilenumc_c2_empty_n,
        tilenumc_read => conv_U0_tilenumc_read,
        tilen_out_din => conv_U0_tilen_out_din,
        tilen_out_full_n => tilen_c5_full_n,
        tilen_out_write => conv_U0_tilen_out_write,
        tilenumc_out_din => conv_U0_tilenumc_out_din,
        tilenumc_out_full_n => tilenumc_c6_full_n,
        tilenumc_out_write => conv_U0_tilenumc_out_write);

    store_c_U0 : component region_before_store_c
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => store_c_U0_ap_start,
        ap_done => store_c_U0_ap_done,
        ap_continue => store_c_U0_ap_continue,
        ap_idle => store_c_U0_ap_idle,
        ap_ready => store_c_U0_ap_ready,
        C_i => C_i,
        C_o => store_c_U0_C_o,
        C_o_ap_vld => store_c_U0_C_o_ap_vld,
        c_buf_address0 => store_c_U0_c_buf_address0,
        c_buf_ce0 => store_c_U0_c_buf_ce0,
        c_buf_q0 => c_buf_t_q0,
        tilenumc_dout => tilenumc_c6_dout,
        tilenumc_empty_n => tilenumc_c6_empty_n,
        tilenumc_read => store_c_U0_tilenumc_read,
        tilen_dout => tilen_c5_dout,
        tilen_empty_n => tilen_c5_empty_n,
        tilen_read => store_c_U0_tilen_read);

    tilenuma_c_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out_din,
        if_full_n => tilenuma_c_full_n,
        if_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out_write,
        if_dout => tilenuma_c_dout,
        if_empty_n => tilenuma_c_empty_n,
        if_read => load_a_U0_tilenuma_read);

    tilenuma_c1_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out1_din,
        if_full_n => tilenuma_c1_full_n,
        if_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenuma_out1_write,
        if_dout => tilenuma_c1_dout,
        if_empty_n => tilenuma_c1_empty_n,
        if_read => load_b_U0_tilenuma_read);

    tilen_c_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilen_out_din,
        if_full_n => tilen_c_full_n,
        if_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilen_out_write,
        if_dout => tilen_c_dout,
        if_empty_n => tilen_c_empty_n,
        if_read => load_a_U0_tilen_read);

    tilenumc_c_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out_din,
        if_full_n => tilenumc_c_full_n,
        if_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out_write,
        if_dout => tilenumc_c_dout,
        if_empty_n => tilenumc_c_empty_n,
        if_read => load_b_U0_tilenumc_read);

    tilenumc_c2_U : component region_before_fifo_w32_d3_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out2_din,
        if_full_n => tilenumc_c2_full_n,
        if_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_tilenumc_out2_write,
        if_dout => tilenumc_c2_dout,
        if_empty_n => tilenumc_c2_empty_n,
        if_read => conv_U0_tilenumc_read);

    tilenuma_c3_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => load_a_U0_tilenuma_out_din,
        if_full_n => tilenuma_c3_full_n,
        if_write => load_a_U0_tilenuma_out_write,
        if_dout => tilenuma_c3_dout,
        if_empty_n => tilenuma_c3_empty_n,
        if_read => conv_U0_tilenuma_read);

    tilen_c4_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => load_a_U0_tilen_out_din,
        if_full_n => tilen_c4_full_n,
        if_write => load_a_U0_tilen_out_write,
        if_dout => tilen_c4_dout,
        if_empty_n => tilen_c4_empty_n,
        if_read => conv_U0_tilen_read);

    tilen_c5_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_U0_tilen_out_din,
        if_full_n => tilen_c5_full_n,
        if_write => conv_U0_tilen_out_write,
        if_dout => tilen_c5_dout,
        if_empty_n => tilen_c5_empty_n,
        if_read => store_c_U0_tilen_read);

    tilenumc_c6_U : component region_before_fifo_w32_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => conv_U0_tilenumc_out_din,
        if_full_n => tilenumc_c6_full_n,
        if_write => conv_U0_tilenumc_out_write,
        if_dout => tilenumc_c6_dout,
        if_empty_n => tilenumc_c6_empty_n,
        if_read => store_c_U0_tilenumc_read);

    start_for_load_a_U0_U : component region_before_start_for_load_a_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_load_a_U0_din,
        if_full_n => start_for_load_a_U0_full_n,
        if_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_write,
        if_dout => start_for_load_a_U0_dout,
        if_empty_n => start_for_load_a_U0_empty_n,
        if_read => load_a_U0_ap_ready);

    start_for_load_b_U0_U : component region_before_start_for_load_b_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_load_b_U0_din,
        if_full_n => start_for_load_b_U0_full_n,
        if_write => dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_write,
        if_dout => start_for_load_b_U0_dout,
        if_empty_n => start_for_load_b_U0_empty_n,
        if_read => load_b_U0_ap_ready);




    C_o <= store_c_U0_C_o;
    C_o_ap_vld <= store_c_U0_C_o_ap_vld;
    ap_channel_done_a_buf <= load_a_U0_ap_done;
    ap_channel_done_b_buf <= load_b_U0_ap_done;
    ap_channel_done_c_buf <= conv_U0_ap_done;
    ap_done <= store_c_U0_ap_done;
    ap_idle <= (store_c_U0_ap_idle and load_b_U0_ap_idle and load_a_U0_ap_idle and (c_buf_t_empty_n xor ap_const_logic_1) and (ap_const_logic_1 xor a_buf_t_empty_n) and (b_buf_t_empty_n xor ap_const_logic_1) and dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_idle and conv_U0_ap_idle);
    ap_ready <= dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= store_c_U0_ap_done;
    ap_sync_ready <= dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_ready;
    conv_U0_ap_continue <= c_buf_i_full_n;
    conv_U0_ap_start <= (b_buf_t_empty_n and a_buf_t_empty_n);
    conv_U0_c_buf_full_n <= c_buf_i_full_n;
    conv_U0_start_full_n <= ap_const_logic_1;
    conv_U0_start_write <= ap_const_logic_0;
    dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_continue <= ap_const_logic_1;
    dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_ap_start <= ap_start;
    dataflow_in_loop_VITIS_LOOP_65_3_entry83_U0_start_full_n <= (start_for_load_b_U0_full_n and start_for_load_a_U0_full_n);
    load_a_U0_a_buf_full_n <= a_buf_i_full_n;
    load_a_U0_ap_continue <= a_buf_i_full_n;
    load_a_U0_ap_start <= start_for_load_a_U0_empty_n;
    load_a_U0_start_full_n <= ap_const_logic_1;
    load_a_U0_start_write <= ap_const_logic_0;
    load_b_U0_ap_continue <= b_buf_i_full_n;
    load_b_U0_ap_start <= start_for_load_b_U0_empty_n;
    load_b_U0_b_buf_full_n <= b_buf_i_full_n;
    load_b_U0_start_full_n <= ap_const_logic_1;
    load_b_U0_start_write <= ap_const_logic_0;
    start_for_load_a_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_load_b_U0_din <= (0=>ap_const_logic_1, others=>'-');
    store_c_U0_ap_continue <= ap_continue;
    store_c_U0_ap_start <= c_buf_t_empty_n;
    store_c_U0_start_full_n <= ap_const_logic_1;
    store_c_U0_start_write <= ap_const_logic_0;
end behav;
